# === func-gen- : graphics/opengl/instancecull fgp graphics/opengl/instancecull.bash fgn instancecull fgh graphics/opengl
instancecull-src(){      echo graphics/opengl/instancecull.bash ; }
instancecull-source(){   echo ${BASH_SOURCE:-$(env-home)/$(instancecull-src)} ; }
instancecull-vi(){       vi $(instancecull-source) ; }
instancecull-env(){      elocal- ; }
instancecull-usage(){ cat << EOU

OpenGL Instance Culling
========================

See also

* instcull-
* mountains-
* nature-



* http://rastergrid.com/blog/2010/02/instance-culling-using-geometry-shaders/

Frustum Culling with instanced rendereing done on GPU 
using transform feedback. 

Demo code::

   instancecull-get
   instancecull-cd nature12_src


References
-----------

Maths of Frustum culling

* http://cgvr.cs.uni-bremen.de/teaching/cg_literatur/lighthouse3d_view_frustum_culling/
* http://www.gamedev.net/topic/626091-most-efficient-general-rendering-strategies-for-new-gpus/


Transform Feedback
--------------------

* https://www.opengl.org/wiki/Transform_Feedback

Capture primitives generated by vs + gs ?

::

    387     // bind output varyings
    388     const char *vars[] = { "CulledPosition" };
    389     glTransformFeedbackVaryings(this->cullPO, 1, vars, GL_SEPARATE_ATTRIBS);
    ///
    ///          * 1 string in varyings array *vars*                                        
    ///          * strings specify names of the output variables 
    ///            of the appropriate shader stage to capture
    ///


cull.vs::

 10 in vec4 InstancePosition;
 11 
 12 out vec4 OrigPosition;
 13 flat out int objectVisible;
 14    
 15 void main(void) {
 16       
 17    OrigPosition = InstancePosition;
 // 
 //    determine if InstancePosition is within viewing frustum 
 // 
 53    objectVisible = inFrustum ? 1 : 0;
 54 }




cull.gs::

    layout(points) in; 
    layout(points, max_vertices = 1) out;

    in vec4 OrigPosition[1];
    flat in int objectVisible[1];
    out vec4 CulledPosition;

    void main() {

       /* only emit primitive if the object is visible */
       if ( objectVisible[0] == 1 ) 
       {   
          CulledPosition = OrigPosition[0];
          EmitVertex();
          EndPrimitive();
       }   
    }



EOU
}
instancecull-dir(){ echo $(local-base)/env/graphics/opengl/instancecull ; }
instancecull-cd(){  cd $(instancecull-dir)/$1; }
instancecull-mate(){ mate $(instancecull-dir) ; }
instancecull-get(){
   local dir=$(instancecull-dir) &&  mkdir -p $dir && cd $dir

   local url="http://rastergrid.com/blog/wp-content/uploads/2010/06/nature12_src.zip"
   local zip=$(basename $url)
   local nam=${zip/.zip}

   [ ! -f "$zip" ] && curl -L -O "$url"
   [ ! -d "$nam" ] && unzip $zip -d $nam 

}

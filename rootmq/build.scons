""" 
    Currently this uses pkg/env/aberdeen-config 
    based Flag parsers ...

"""
Import("env")

tools = []

# external code installed by system pkg manager 
tools += [ 'glib', 'gthread', ]

# hmm this is mainly for testing ... perhaps need to partition
tools += [ 'sqlite' ]

# external code installed by bash functions : rmqc- , root-
tools += [ 'rmqc', 'root', ] 

# code compiled by SCT/SCons 
tools += [ 'priv', 'cjsn', ]   


# nasty kludge dependency... partition the testing to avoid this 
tools += [ 'abtmodel']


er = env.Clone( tools=tools  )
EWorkaroundSwallowedXlinker( er )


headers = [
   'include/MQ.h',
   'include/MyTMessage.h',
   'include/root2cjson.h',
   'include/rootmq.h',
   'include/EvMQ.h',
   'include/LinkDef.hh'
]   
rcd = er.RootcintDictionary( 'rootmq' , headers )  

er.Append( CPPPATH=['include'] )
er.Append( CPPPATH=['$MAIN_DIR'] )  ## the dict has includes with paths from the dir above containing the main.scons 

#EWorkaroundSwallowedXlinker( er )
#ESortedDump(er)
libs = er.ComponentLibrary('rootmq' , Glob('src/*.c') + rcd + Glob('src/*.cc') )
if er.Bit("mac"):
    er.Rootsolink( libs )

er.Append( LIBS=['rootmq'] )

er.Tool('env_propagate', ENV_PRIVATE_PATH=True , HOME=True )
er.Tool('env_dump')
er.Tool("sct_dump", LIBS=True , CPPPATH=True, LIBPATH=True  )

er.ComponentTestProgram( 
   prog_name='mq_sendstring', 
   source=['mq_sendstring.cc'],
   COMPONENT_TEST_TIMEOUT=10,
 )

er.Tool('libpath', dirs=['$LIB_DIR'] )

## there is no output from the test until completion ... which is implemeted in SCT/RunCommand
## KILL is used to do the termination 
er.ComponentTestProgram( 
    prog_name='mq_monitor', 
    source=['tests/mq_monitor.cc'],
    COMPONENT_TEST_RUNNABLE=False ,
    COMPONENT_TEST_TIMEOUT=10,
)

er.ComponentTestProgram( prog_name='environ', source=['tests/environ.c'], )



ea = er.Clone( tools=['abtmodel','sqlite'] )
ea.Tool('env_propagate',ABERDEEN_HOME=True )
ea.ComponentTestProgram( prog_name='capture', source=['tests/capture.cc'], )


#ea.ComponentTestProgram( prog_name='mq_monitor_test', source=['tests/mq_monitor_test.cc'], COMPONENT_TEST_RUNNABLE=False )


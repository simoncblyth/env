scm-src(){ echo scm/scm.bash  ;}
scm-source(){ echo ${BASH_SOURCE:-$(env-home)/$(scm-src)} ; }
scm-vi(){    vi $(scm-source) ; }

scm-log(){ cat << EOL


   2012 March 7 

        Bringing SVN back online on replacement cms02 required rerun 
        for newer python 2.5.1 => 2.5.6
             [blyth@cms02 hooks]$ TRAC_INSTANCE=env scm-postcommit




EOL
}


scm-usage(){
  
   cat << EOU

      An SCM is a combination of an SVN repository and a Tracitory , this provides
      commands to create these two tied objects in a coherent way.


      scm-create  <name> <arg> 
               
           Create a repository+tracitory (an scm) named <name> and if <arg> is 
           a valid directory path then import the content into it
           if <arg> is INIT then just create the branches/tags/trunk or if EMPTY
           the default leave the repository at revision 0

           For example : 
                scm-create data INIT         ## with branches/tags/trunk at revision 1
                scm-create data EMPTY        ## at revision 0 
                scm-create data /path/to/directory/to/put/into/trunk
                

      scm-wipe <name>
      
           Delete the repository + trac instance called <name>
                  
                  
      scm-rename <oldname> <newname>                  


      scm-postcommit <name>

          Creates or replaces the svn post-commit hook with the trac 0.11 contrib supplied
          trac-post-commit-hook that supports auto referencing/closing of tickets according 
          to SVN commit messages. 

             http://trac.edgewall.org/browser/branches/0.11-stable/contrib/trac-post-commit-hook
             http://trac.edgewall.org/wiki/TracFaq#can-trac-automatically-update-a-ticket-when-i-commit-a-changeset

      scm-postcommit-test 

           test with the apache used in an empty environment ... with non existant repo paths
           will check out the environmnent details such as : python libs, sqlite libs, python egg cache 
   

       
        NOTES ...
           * transition from old to new is as yet incomplete          
           * old way is overly complicated by attempting to support remote creation ...
        
      
            
EOU

}

scm-env(){
  elocal-
}


scm-create(){

  local msg="=== $FUNCNAME :" 
  local name=$1
  shift 
  [ -z "$name" ]     && echo $msg an instance name must be provided && return 1

  svn-
  svn-create $name $*
  
  trac-
  trac-create $name 
   

}


scm-wipe(){
  local msg="=== $FUNCNAME :" 
  local name=$1
  shift 
  [ -z "$name" ]     && echo $msg an instance name must be provided && return 1


  svn-
  svn-wipe $name
  
  trac-
  trac-wipe $name    


}



scm-rename(){

  local msg="=== $FUNCNAME :" 
  local oldname=$1
  local newname=$2
  [ -z "$oldname" ]     && echo $msg an existing instance name must be provided for oldname     && return 1
  [ -z "$newname" ]     && echo $msg an non-existing instance name must be provided for newname && return 1

  svn-
  svn-rename $oldname $newname
  
  trac-
  trac-rename $oldname $newname    


}


scm-postcommit(){
   local msg="=== $FUNCNAME :"
   local name=${1:-$TRAC_INSTANCE}
   svn-
   local path=$(svn-postcommit-path $name)
   local tmp=/tmp/env/$FUNCNAME/$(basename $path) 
   mkdir -p $(dirname $tmp)
   trac-
   tractrac-
   sqlite-
   scm-postcommit- > $tmp

   local cmd="diff $path $tmp"
   echo $msg $cmd
   eval $cmd    
   
   cmd="sudo cp $tmp $path "
   local ans
   read -p "$msg enter YES to proceed with : $cmd : " ans
   [ "$ans" != "YES" ] && echo $msg skipping && return

   echo $msg proceeding ...
   eval $cmd  


   ## closing makes more sense to me
   local tpch=$(tractrac-dir)/contrib/trac-post-commit-hook
   perl -pi -e "s,'closed':,'closing':," $tpch 
   svn diff $tpch


   local eggc=$(scm-eggcache)
   [ ! -d "$eggc" ] && mkdir $eggc && apache-chown $eggc

   apache-
   apache-chown $path
   sudo chmod ugo+x $path
   sudo ls -l $(dirname $path)
}


scm-postcommit-test(){
  type $FUNCNAME
  local name=${1:-$TRAC_INSTANCE}
  local dir=$(dirname $(dirname $(svn-postcommit-path $name)))
  cd $dir

  apache-
  sudo -u $(apache-user) env - ./hooks/post-commit /svn/test 7 

}


scm-eggcache(){ echo /tmp/trac-egg-cache ; }

scm-postcommit-(){ cat << EOP
#!/bin/sh
## generated by $FUNCNAME  $(date)
REPOS="\$1"
REV="\$2"

export PYTHON_EGG_CACHE=$(scm-eggcache)
export LD_LIBRARY_PATH=$(sqlite-libdir):$(python-libdir):\$LD_LIBRARY_PATH
$(which python) $(tractrac-dir)/contrib/trac-post-commit-hook -p "$(trac-envpath)" -r "\$REV"

EOP
}


scm-get-tgz(){
   local name=${1:-env}
   local tgz=$name.tar.gz

   scp C2:/var/scm/backup/cms02/tracs/$name/last/$tgz .
   scp C2:/var/scm/backup/cms02/tracs/$name/last/$tgz.dna .

   md5 $tgz
   cat $tgz.dna

}



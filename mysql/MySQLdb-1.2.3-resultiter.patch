Index: MySQLdb/_mysql.c
===================================================================
--- MySQLdb/_mysql.c	(revision 650)
+++ MySQLdb/_mysql.c	(working copy)
@@ -1456,6 +1456,89 @@
 	return NULL;
 }
 
+
+static char _mysql_ResultObject_futurefetch_row__doc__[] =
+"futurefetchrow()\n\
+  Fetches one row as a tuple of strings.\n\
+  NULL is returned as None.\n\
+  A single None indicates the end of the result set.\n\
+";
+
+static PyObject *
+_mysql_ResultObject_futurefetch_row(
+	_mysql_ResultObject *self,
+ 	PyObject *unused)
+ {
+	unsigned int n, i;
+	unsigned long *length;
+	PyObject *r=NULL;
+	MYSQL_ROW row;
+	
+ 	check_result_connection(self);
+ 	
+	if (!self->use)
+		row = mysql_fetch_row(self->result);
+	else {
+ 		Py_BEGIN_ALLOW_THREADS;
+		row = mysql_fetch_row(self->result);
+ 		Py_END_ALLOW_THREADS;
+	}
+	if (!row && mysql_errno(&(((_mysql_ConnectionObject *)(self->conn))->connection))) {
+		_mysql_Exception((_mysql_ConnectionObject *)self->conn);
+		goto error;
+	}
+	if (!row) {
+		Py_INCREF(Py_None);
+		return Py_None;
+	}
+	
+	n = mysql_num_fields(self->result);
+	if (!(r = PyTuple_New(n))) return NULL;
+	length = mysql_fetch_lengths(self->result);
+	for (i=0; i<n; i++) {
+		PyObject *v;
+		if (row[i]) {
+			v = PyString_FromStringAndSize(row[i], length[i]);
+			if (!v) goto error;
+		} else /* NULL */ {
+			v = Py_None;
+			Py_INCREF(v);
+ 		}
+		PyTuple_SET_ITEM(r, i, v);
+ 	}
+	return r;
+  error:
+	Py_XDECREF(r);
+	return NULL;
+}
+
+
+static PyObject *
+_mysql_ResultObject__iter__(
+	_mysql_ResultObject *self,
+	PyObject *unused)
+{
+	check_result_connection(self);
+	Py_INCREF(self);
+	return (PyObject *)self;
+}
+
+static PyObject *
+_mysql_ResultObject_next(
+	_mysql_ResultObject *self,
+	PyObject *unused)
+{
+	PyObject *row;
+	check_result_connection(self);
+	row = _mysql_ResultObject_futurefetch_row(self, NULL);
+	if (row == Py_None) {
+		Py_DECREF(row);
+		PyErr_SetString(PyExc_StopIteration, "");
+		return NULL;
+	}
+	return row;
+}
+
 #if MYSQL_VERSION_ID >= 32303
 
 static char _mysql_ConnectionObject_change_user__doc__[] =
@@ -2398,6 +2481,12 @@
 		_mysql_ResultObject_fetch_row__doc__
 	},
 	{
+		"futurefetch_row",
+		(PyCFunction)_mysql_ResultObject_futurefetch_row,
+		METH_VARARGS | METH_KEYWORDS,
+		_mysql_ResultObject_futurefetch_row__doc__
+	},
+	{
 		"field_flags",
 		(PyCFunction)_mysql_ResultObject_field_flags,
 		METH_VARARGS,
@@ -2678,9 +2767,9 @@
 #if PY_VERSION_HEX >= 0x02020000
 	/* Added in release 2.2 */
 	/* Iterators */
-	0, /* (getiterfunc) tp_iter */
-	0, /* (iternextfunc) tp_iternext */
-	
+	(getiterfunc) _mysql_ResultObject__iter__, /* (getiterfunc) tp_iter */
+	(iternextfunc) _mysql_ResultObject_next, /* (iternextfunc) tp_iternext */
+		
 	/* Attribute descriptor and subclassing stuff */
 	(struct PyMethodDef *) _mysql_ResultObject_methods, /* tp_methods */
 	(MyMemberlist(*)) _mysql_ResultObject_memberlist, /*tp_members */

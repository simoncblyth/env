Index: setup.py
===================================================================
--- setup.py	(revision 28)
+++ setup.py	(working copy)
@@ -16,7 +16,7 @@
     packages = find_packages(exclude=['*.tests*']),
     test_suite = 'bittennotify.tests.suite',
     package_data = {
-        'bittennotify': ['templates/*.cs']
+        'bittennotify': ['templates/*.txt']
     },
     entry_points = {
         'distutils.commands': [
Index: bittennotify/main.py
===================================================================
--- bittennotify/main.py	(revision 28)
+++ bittennotify/main.py	(working copy)
@@ -9,7 +9,7 @@
 
 from trac.core import *
 from trac.web.chrome import ITemplateProvider
-from trac.config import BoolOption
+from trac.config import BoolOption, Option
 from trac.notification import NotifyEmail
 from bitten.api import IBuildListener
 from bitten.model import Build, BuildStep, BuildLog
@@ -18,8 +18,8 @@
 CONFIG_SECTION = 'notification'
 NOTIFY_ON_FAILURE = 'notify_on_failed_build'
 NOTIFY_ON_SUCCESS = 'notify_on_successful_build'
+BITTEN_BUILD_CC = 'bitten_build_cc'
 
-
 class BittenNotify(Component):
     notify_on_failure = BoolOption(CONFIG_SECTION, NOTIFY_ON_FAILURE, 'true',
             """Notify if bitten build fails.""")
@@ -27,6 +27,10 @@
     notify_on_success = BoolOption(CONFIG_SECTION, NOTIFY_ON_SUCCESS, 'false',
             """Notify if bitten build succeeds.""")
 
+    bitten_build_cc = Option(CONFIG_SECTION, BITTEN_BUILD_CC , '',
+            """ Email address to notify in addition to changeset author.""")
+
+
     def __init__(self):
         self.log.debug('Initializing BittenNotify plugin')
 
@@ -95,6 +99,7 @@
         dict.__init__(self)
         self.build = build
         self.env = env
+        self['project_name'] = self.env.project_name
         self['id'] = self.build.id
         self['status'] = self.readable_states[self.build.status]
         self['link'] = self.env.abs_href.build(self.build.config, 
@@ -106,6 +111,7 @@
         self['author'] = self.get_author(build)
         self['errors'] = self.get_errors(build)
         self['faillog'] = self.get_faillog(build)
+        self['summary'] = self.get_summary(build)
         
     def get_author(self, build):
         if build and build.rev:
@@ -119,23 +125,51 @@
         return build_steps
         
     def get_errors(self, build):
-        errors = ''
+        errors = ['']
         for step in self.get_failed_steps(build):
-            errors += ', '.join(['%s: %s' % (step.name, error) \
-                    for error in step.errors])
-        return errors
+            errors.append( ', '.join(['%s: %s' % (step.name, error) \
+                    for error in step.errors]))
+        return '\n'.join(errors+[''])
                                
     def get_faillog(self, build):
-        faillog = ''
+        faillog = ['']
         for step in self.get_failed_steps(build):
             build_logs = BuildLog.select(self.env, 
                     build=build.id, 
                     step=step.name)
             for log in build_logs:
-                faillog += '\n'.join(['%5s: %s' % (level, msg) \
-                        for level, msg in log.messages])
-        return faillog
+                faillog.append( '\n'.join(['%5s: %s' % (level, msg) \
+                        for level, msg in log.messages]))
+        return '\n'.join(faillog+[''])
+    
                                
+    def get_summary(self, build ):
+        """
+            Summary based on the bitten timeline summary in 
+                bitten/web_ui.py
+        """
+        steps = []
+        for step in self.get_failed_steps(build):
+            if step.name not in steps:
+                steps.append(step.name)
+        
+        if len(steps) == 0:
+            message = 'Succeeded'
+        elif len(steps) < 2:
+            message = steps[0]
+        elif len(steps) == 2:
+            message = ' and '.join(steps)
+        elif len(steps) > 2:
+            message = ', '.join(steps[:-1]) + ', and ' + \
+                                  steps[-1]
+        
+        message = 'Step%s %s failed' % (
+                        len(steps) != 1 and 's' or '', message
+                    )
+        return message
+        
+        
+                                                                                                            
     def __getattr__(self, attr):
         return dict.__getitem__(self,attr)
     
@@ -152,21 +186,27 @@
 class BittenNotifyEmail(NotifyEmail):
     """Notification of failed builds."""
 
+    template_name = 'bitten_notify_email.txt'
     from_email = 'bitten@localhost'
     
     def __init__(self, env):
         NotifyEmail.__init__(self, env)
-        self.template_name = 'bitten_notify_email.cs'
 
     def notify(self, build_info):
         self.build_info = build_info
-        self.hdf['build'] = self.build_info
-        subject = '[%s Build] %s [%s] %s' % (self.build_info.status,
-                self.env.project_name, 
-                self.build_info.changeset, 
+        self.data = self.build_info
+        
+        status = self.build_info.status
+        author = self.build_info.author
+        summary = self.build_info.summary
+        subject = '%s r%s [%s] %s/%s' % ( author, self.build_info.changeset, summary,
+                self.env.project_name,
                 self.build_info.config)
-        self.env.log.debug('notification: %s' % 
-                self.hdf.render(self.template_name))
+
+        stream = self.template.generate(**self.data)
+        body = stream.render('text')
+
+        self.env.log.debug('notification: %s' % body )
         NotifyEmail.notify(self, self.build_info.id, subject)
 
     def get_recipients(self, resid):
@@ -177,6 +217,11 @@
             author = users[author]
         torecipients = [author]
         ccrecipients = []
+	cc = self.env.config.get(BITTEN_BUILD_CC,'')
+	if cc!='':
+            if(cc in users.keys() and users[cc]):
+                cc = users[cc]
+	    ccrecipients.extend(cc)
         return (torecipients, ccrecipients)
 
     def send(self, torcpts, ccrcpts, mime_headers={}):
Index: bittennotify/templates/bitten_notify_email.txt
===================================================================
--- bittennotify/templates/bitten_notify_email.txt	(revision 0)
+++ bittennotify/templates/bitten_notify_email.txt	(revision 0)
@@ -0,0 +1,15 @@
+  ${status} build of ${project_name} [${changeset}]
+---------------------------------------------------------------------
+
+  Summary  :             ${summary}      
+  Changeset:             ${changeset}  -  <${changesetlink}>
+  Committed by:          ${author}
+
+  Build Configuration:   ${config}
+  Build Slave:           ${slave}
+  Build Number:          ${id}  -  <${link}>
+
+  Failed Steps:          ${errors}
+  Failure Log:           
+  
+${faillog}

Property changes on: bittennotify/templates/bitten_notify_email.txt
___________________________________________________________________
Name: svn:executable
   + *


Index: setup.py
===================================================================
--- setup.py	(revision 28)
+++ setup.py	(working copy)
@@ -16,7 +16,7 @@
     packages = find_packages(exclude=['*.tests*']),
     test_suite = 'bittennotify.tests.suite',
     package_data = {
-        'bittennotify': ['templates/*.cs']
+        'bittennotify': ['templates/*.txt']
     },
     entry_points = {
         'distutils.commands': [
Index: bittennotify/main.py
===================================================================
--- bittennotify/main.py	(revision 28)
+++ bittennotify/main.py	(working copy)
@@ -9,7 +9,7 @@
 
 from trac.core import *
 from trac.web.chrome import ITemplateProvider
-from trac.config import BoolOption
+from trac.config import BoolOption, Option
 from trac.notification import NotifyEmail
 from bitten.api import IBuildListener
 from bitten.model import Build, BuildStep, BuildLog
@@ -18,8 +18,8 @@
 CONFIG_SECTION = 'notification'
 NOTIFY_ON_FAILURE = 'notify_on_failed_build'
 NOTIFY_ON_SUCCESS = 'notify_on_successful_build'
+BITTEN_BUILD_CC = 'bitten_build_cc'
 
-
 class BittenNotify(Component):
     notify_on_failure = BoolOption(CONFIG_SECTION, NOTIFY_ON_FAILURE, 'true',
             """Notify if bitten build fails.""")
@@ -27,6 +27,10 @@
     notify_on_success = BoolOption(CONFIG_SECTION, NOTIFY_ON_SUCCESS, 'false',
             """Notify if bitten build succeeds.""")
 
+    bitten_build_cc = Option(CONFIG_SECTION, BITTEN_BUILD_CC , '',
+            """ Email address to notify in addition to changeset author.""")
+
+
     def __init__(self):
         self.log.debug('Initializing BittenNotify plugin')
 
@@ -95,6 +99,7 @@
         dict.__init__(self)
         self.build = build
         self.env = env
+        self['project_name'] = self.env.project_name
         self['id'] = self.build.id
         self['status'] = self.readable_states[self.build.status]
         self['link'] = self.env.abs_href.build(self.build.config, 
@@ -152,21 +157,24 @@
 class BittenNotifyEmail(NotifyEmail):
     """Notification of failed builds."""
 
+    template_name = 'bitten_notify_email.txt'
     from_email = 'bitten@localhost'
     
     def __init__(self, env):
         NotifyEmail.__init__(self, env)
-        self.template_name = 'bitten_notify_email.cs'
 
     def notify(self, build_info):
         self.build_info = build_info
-        self.hdf['build'] = self.build_info
+        self.data = self.build_info
         subject = '[%s Build] %s [%s] %s' % (self.build_info.status,
                 self.env.project_name, 
                 self.build_info.changeset, 
                 self.build_info.config)
-        self.env.log.debug('notification: %s' % 
-                self.hdf.render(self.template_name))
+
+        stream = self.template.generate(**self.data)
+        body = stream.render('text')
+
+        self.env.log.debug('notification: %s' % body )
         NotifyEmail.notify(self, self.build_info.id, subject)
 
     def get_recipients(self, resid):
@@ -177,6 +185,9 @@
             author = users[author]
         torecipients = [author]
         ccrecipients = []
+	cc = self.env.config.get(BITTEN_BUILD_CC,'')
+	if cc!='':
+		ccrecipients.extend(cc)
         return (torecipients, ccrecipients)
 
     def send(self, torcpts, ccrcpts, mime_headers={}):

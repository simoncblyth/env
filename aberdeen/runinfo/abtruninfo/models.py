# generated by /home/blyth/a/DataModel/rootdjango/djroot.py 
from django.db import models
class AbtRunInfo(models.Model):
    ExptName = models.CharField(**{'max_length': 80, 'help_text': 'Experiment name'}) #  
    TrackerOffset = models.CharField(**{'max_length': 80, 'help_text': 'Experiment config (tracker offset)'}) #  
    SourceType = models.CharField(**{'max_length': 80, 'help_text': 'Experiment config (source type)'}) #  
    PmtGain = models.CharField(**{'max_length': 80, 'help_text': 'Experiment config (PMT gain)'}) #  
    TriggerCondition = models.CharField(**{'max_length': 80, 'help_text': 'Experiment config (trigger condition)'}) #  
    Comment = models.CharField(**{'max_length': 80, 'help_text': 'Comment'}) #  
    RunNumber = models.PositiveIntegerField(**{'help_text': 'Run number'}) #  
    OperatorName = models.CharField(**{'max_length': 32, 'help_text': 'Operator name'}) #  
    FrontendHost = models.CharField(**{'max_length': 32, 'help_text': 'Frontend host name'}) #  
    FrontendName = models.CharField(**{'max_length': 32, 'help_text': 'Frontend name'}) #  
    StartTime = models.CharField(**{'max_length': 32, 'help_text': 'Start time of run'}) #  
    StartTimeBinary = models.PositiveIntegerField(**{'help_text': 'Start time of run'}) #  
    StopTime = models.CharField(**{'max_length': 32, 'help_text': 'Stop time of run'}) #  
    StopTimeBinary = models.PositiveIntegerField(**{'help_text': 'Stop time of run'}) #  
    #HvDemand = models.?(**{'help_text': 'High voltage demand'}) # "('fHvDemand', 'High voltage demand', 'Float_t', 'float', 1, '', 128)" 
    Temperature = models.FloatField(**{'help_text': 'Temperature'}) #  
    Humidity = models.FloatField(**{'help_text': 'Relative humidity'}) #  
    MtReconVersion = models.CharField(**{'max_length': 8, 'help_text': 'Muon event reconstruction version'}) #  
    NdReconVersion = models.CharField(**{'max_length': 8, 'help_text': 'Neutron event reconstruction version'}) #  
    DmVersion = models.CharField(**{'max_length': 12, 'help_text': 'Data model version'}) #  

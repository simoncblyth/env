"""
   SCons/SCT Main Build Script  
       http://code.google.com/p/swtoolkit/wiki/Examples

   Note the below "addRepository" definitions of mappings of external
   repos down into this one allowing the external code to be build here.
      * http://code.google.com/p/swtoolkit/wiki/Examples#Include_source_from_somewhere_outside_your_project

      || ABERDEEN_HOME    ||  ./aberdeen  ||
      || ENV_PREFIX/cjsn  ||  ./cjsn      ||


   As you build this you will run into missing headers, fulfil 
   these dependencies with :

       cjsn-
       cjsn-get 
     
       rmqc-
       rmqc-build
 
"""

dirs  = []
dirs += [ 'envtools' ]
dirs += [ 'priv', 'cjsn' ]
dirs += [ 'rootmq' ]
dirs += [ 'root/addons' ]
dirs += [ 'aberdeen/DataModel' ]
#dirs += [ 'aberdeen/AbtViz' ]
dirs += [ 'AbtViz' ]   ## non-mapped env version for ease of same-repo development 


#dirs = [ 'site_scons/site_tools/tests/tmpl' ]
#dirs = [ 'rootmq' ]
#dirs = [ 'test' ]
#dirs = [ 'envtools' ] 
#dirs = ['aberdeen/DataModel']
#dirs = [ 'priv' ]

# common to all builds and dirs 
base = Environment( tools = ['component_setup'] ,   ## fundamental to SCT operation 
    BUILD_SCONSCRIPTS = dirs , 
    COMPONENT_STATIC = False ,
    COMPONENT_LIBRARY_PUBLISH = False ,
    COMPONENT_TEST_RUNNABLE = True ,        ## False prevents test from running even with retest or explicit naming
    INCLUDE_BASE = "$TARGET_ROOT/include" ,
)

import os
aberdeen_home = os.environ.get('ABERDEEN_HOME',"../aberdeen")
base.Dir('aberdeen').addRepository(base.Dir(aberdeen_home))

env_prefix = os.environ.get('ENV_PREFIX',"/usr/local/env")
base.Dir('cjsn').addRepository(base.Dir(env_prefix + os.sep + "cjsn"))




builds = []
linux   = base.Clone(tools = ['target_platform_linux'])
mac     = base.Clone(tools = ['target_platform_mac'])

dbg_mac = mac.Clone(
    BUILD_TYPE = 'dbg',
    BUILD_TYPE_DESCRIPTION = 'debug mac build',
    BUILD_GROUPS = ['default'],
    tools = ['target_debug'],
)
builds.append(dbg_mac)

dbg_linux = linux.Clone(
    BUILD_TYPE = 'dbg',
    BUILD_TYPE_DESCRIPTION = 'debug linux build',
    BUILD_GROUPS = ['default'],
    tools = ['target_debug'],
)
builds.append(dbg_linux)

opt_mac = mac.Clone(
    BUILD_TYPE = 'opt',
    BUILD_TYPE_DESCRIPTION = 'optimized mac build',
    tools = ['target_optimized'],
)
builds.append(opt_mac)

opt_linux = linux.Clone(
    BUILD_TYPE = 'opt',
    BUILD_TYPE_DESCRIPTION = 'optimized linux build',
    tools = ['target_optimized'],
)
builds.append(opt_linux)


BuildEnvironments(builds)

#
#  SCT/SCons Main Build Script  
#       http://code.google.com/p/swtoolkit/wiki/Examples

dirs = (
  'aberdeen/DataModel',
  'priv',
  'rootmq',
  'cjsn',
  'aberdeen/AbtViz',
)

# common to all builds and dirs 
base = Environment( tools = ['component_setup'] ,   ## fundamental to SCT operation 
    BUILD_SCONSCRIPTS = dirs , 
    COMPONENT_STATIC = False ,
    COMPONENT_LIBRARY_PUBLISH = True ,
    INCLUDE_ROOT = "$TARGET_ROOT/include" ,
)
#    COMPONENT_TEST_RUNNABLE = False,  
#        prevents test from running even with retest or explicit naming
#        also inhibits the copy of needed libs into TEST_DIR
#
#    Instead using env_libpath tool to include LIB_DIR in library path ...
#        however are uncertain if the new libs are already there  
#        at the time the tests are run ... maybe should use STAGING_DIR ? 
#
#

# mount ABERDEEN inside ENV for SCons building purposes, following example from 
#    http://code.google.com/p/swtoolkit/wiki/Examples#Include_source_from_somewhere_outside_your_project
#   (assumes aberdeen checkout is sibling to env)
base['ABERDEEN_DIR'] = 'aberdeen'
base.Dir('$ABERDEEN_DIR').addRepository(base.Dir('../aberdeen'))


builds = []
linux   = base.Clone(tools = ['target_platform_linux'])
mac     = base.Clone(tools = ['target_platform_mac'])

dbg_mac = mac.Clone(
    BUILD_TYPE = 'dbg',
    BUILD_TYPE_DESCRIPTION = 'debug mac build',
    BUILD_GROUPS = ['default'],
    tools = ['target_debug'],
)
builds.append(dbg_mac)

dbg_linux = linux.Clone(
    BUILD_TYPE = 'dbg',
    BUILD_TYPE_DESCRIPTION = 'debug linux build',
    BUILD_GROUPS = ['default'],
    tools = ['target_debug'],
)
builds.append(dbg_linux)

opt_mac = mac.Clone(
    BUILD_TYPE = 'opt',
    BUILD_TYPE_DESCRIPTION = 'optimized mac build',
    tools = ['target_optimized'],
)
builds.append(opt_mac)

opt_linux = linux.Clone(
    BUILD_TYPE = 'opt',
    BUILD_TYPE_DESCRIPTION = 'optimized linux build',
    tools = ['target_optimized'],
)
builds.append(opt_linux)


BuildEnvironments(builds)

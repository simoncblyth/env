#
# SCT/SCons Main Build Script  
#    http://code.google.com/p/swtoolkit/wiki/Examples
#

builds = []
tools = []
dirs = []


# global tools ?  
#    incorp tools into cloned environments as needed
#    to avoid kitchensinkism

tools  = ['component_setup']    ## fundamental to SCT operation 
tools += ['untar']


#dirs  += ['priv']
#dirs += ['scons/customtest'] 
dirs  += ['rootmq']


import os
base_env = Environment(
    tools = tools,
    BUILD_SCONSCRIPTS = [os.path.join(dir,'build.scons') for dir in dirs],
)

linux_env   = base_env.Clone(tools = ['target_platform_linux'])
mac_env     = base_env.Clone(tools = ['target_platform_mac'])

dbg_mac_env = mac_env.Clone(
    BUILD_TYPE = 'dbg',
    BUILD_TYPE_DESCRIPTION = 'debug mac build',
    BUILD_GROUPS = ['default'],
    tools = ['target_debug'],
)
builds.append(dbg_mac_env)

dbg_linux_env = linux_env.Clone(
    BUILD_TYPE = 'dbg',
    BUILD_TYPE_DESCRIPTION = 'debug linux build',
    BUILD_GROUPS = ['default'],
    tools = ['target_debug'],
)
builds.append(dbg_linux_env)

opt_mac_env = mac_env.Clone(
    BUILD_TYPE = 'opt',
    BUILD_TYPE_DESCRIPTION = 'optimized mac build',
    tools = ['target_optimized'],
)
builds.append(opt_mac_env)

opt_linux_env = linux_env.Clone(
    BUILD_TYPE = 'opt',
    BUILD_TYPE_DESCRIPTION = 'optimized linux build',
    tools = ['target_optimized'],
)
builds.append(opt_linux_env)


BuildEnvironments(builds)

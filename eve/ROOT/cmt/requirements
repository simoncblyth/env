package ROOT
version v52104

use LCG_Settings v*
use GCCXML v* LCG_Interfaces -no_auto_imports
#use LCG_Configuration v*

macro ROOT_home "/data/env/local/root/root_v5.21.04/root"
macro ROOT_base "$(ROOT_home)"

include_path none
include_dirs $(ROOT_home)/include

macro ROOT_linkopts "-L$(ROOT_home)/lib -lCore -lCint -lTree -lpthread -ldl" \
      WIN32         "/LIBPATH:$(ROOT_home)/lib libCore.lib libCint.lib libTree.lib " \
      osx103&gcc-3.3 "-L$(ROOT_home)/lib -lCore -lCint -lTree -lpthread -u _G__cpp_setup_initializerG__Tree "

macro ROOT_Reflex_linkopts "-L$(ROOT_home)/lib -lReflex" \
      WIN32                "/LIBPATH:$(ROOT_home)/lib libReflex.lib "

macro_append ROOT_linkopts "" ROOT_GE_5_15&WIN32 " libRIO.lib" ROOT_GE_5_15 " -lRIO"

set ROOTSYS $(ROOT_home)

macro ROOT_name "root"

apply_pattern set_lib_path

apply_pattern set_bin_path

apply_pattern set_man_path

path_append MANPATH "$(ROOT_base)/src/root/man" WIN32  "" 

path_remove  PYTHONPATH "/root/"            WIN32 "\root\"     
path_prepend PYTHONPATH "$(ROOT_home)/lib"  WIN32 "$(ROOT_home)\bin"        

macro rootcint '"$(ROOT_home)/bin/rootcint"' 
make_fragment rootcint -header=rootcint_header -trailer=rootcint_trailer

macro genmap_cmd $(ROOTSYS)/bin/genmap
make_fragment genmap -header=genmap_header

macro ROOT_export_paths " $(ROOT_home) "

#-----make fragments for dictionary generation---------------------------------------------------------------
make_fragment reflex_dictionary_generator -header=reflex_dictionary_generator_header \
              -trailer=reflex_dictionary_generator_trailer -dependencies


#
#  purloined from DybPolicy/cmt/requirements
#
#  cp $DDR/dybgaudi/DybPolicy/cmt/fragments/rootcint_dictionary{,_header,_trailer}  fragments/
#  cp $DDR/dybgaudi/DybPolicy/cmt/fragments/rootmap{,_header,_trailer}  fragments/
#
#  NB prior to this caper, there was already some rootcint fragments... 
# -rwxrwxr-x  1 blyth blyth  248 Nov 21 18:15 rootcint
# -rwxrwxr-x  1 blyth blyth  131 Nov 21 18:15 rootcint_header
# -rwxrwxr-x  1 blyth blyth  195 Nov 21 18:15 rootcint_trailer
#
#
#
# Pattern to let a dictionary be built and used.  Use like:
# rootcint_dictionary_headers headers="Header1.h Header2.h"
# Don't inlcude LinkDef.h which should be in src/
use ROOT v* LCG_Interfaces
macro rootmap_name "rootmap" ROOT_GE_5_15 "reflex.rootmap"
pattern rootcint_dictionary \
        public ; \
        apply_pattern ld_library_path ; \
        apply_pattern public_package_include ; \
        private ; \
        apply_pattern private_package_include ; \
	macro <package>_rootmap $(<PACKAGE>ROOT)/$(tag)/$(rootmap_name) \
	      <project>_with_installarea $(CMTINSTALLAREA)/$(tag)/lib/$(rootmap_name) ;\
        macro_append <package>_rootcint_source ../$(tag)/rootcint/*Dict.cc ; \
        macro rootcint_dict_suffix Dict ; \
	macro <package>_rootcint_linkdef_file <linkdeffile> ; \
        document rootcint_dictionary <package>_cint <headerfiles> ; \
	document rootmap <package>_rootmap ; \
        public  
make_fragment rootcint_dictionary -header=rootcint_dictionary_header -trailer=rootcint_dictionary_trailer
make_fragment rootmap -header=rootmap_header -trailer=rootmap_trailer
	




